apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector
metadata:
  name: otel-standalone-template
  namespace: otel-standalone
spec:
  mode: deployment
  config:
    receivers:
      # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/receiver/prometheusreceiver/README.md
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otelcol'
              scrape_interval: 5s
              static_configs:
                - targets: ['0.0.0.0:8000']
            - job_name: k8s
              scrape_interval: 5s
              kubernetes_sd_configs:
                - role: service
              relabel_configs:
                - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
                  regex: "true"
                  action: keep
                - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                  action: replace
                  target_label: __metrics_path__
                  regex: (.+)
                - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                  action: replace
                  target_label: __address__
                  regex: (.+)(?::\d+);(\d+)
                  replacement: $1:$2
    processors:
      resourcedetection/env:
        detectors: [env]
        timeout: 2s
        override: false
      transform:
        metric_statements:
          - context: datapoint
            statements:
              - set(attributes["host"], resource.attributes["net.host.name"])
    exporters:
      otlp/keda:
        endpoint: keda-otel-scaler.keda.svc:4317
        compression: "none"
        tls:
          insecure: true
      debug:
        verbosity: detailed
      prometheus:
        endpoint: "0.0.0.0:1234"
        metric_expiration: 180m
        enable_open_metrics: true
    service:
      pipelines:
        metrics:
          receivers: [prometheus]
          #processors: [resourcedetection/env, transform]
          exporters: [debug, otlp/keda]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otel-collector-role
  namespace: otel-standalone
rules:
  - apiGroups: [""]
    resources: ["pods", "services"]
    verbs: ["get", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-collector-binding
  namespace: otel-standalone
subjects:
  - kind: ServiceAccount
    name: otel-standalone-template-collector
    namespace: otel-standalone
roleRef:
  kind: ClusterRole
  name: otel-collector-role
  apiGroup: rbac.authorization.k8s.io
